name: CI/CD - Build, Push Docker & Deploy via Helm

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  IMAGE_NAME: yourdockerhub/docu-genius
  HELM_RELEASE: docu-genius
  HELM_NAMESPACE: docu-genius
  HELM_TIMEOUT: 5m

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    name: Build & Push Docker Image

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./infra/Dockerfile
          push: true
          tags: ${{ env.IMAGE_NAME }}:latest

  deploy:
    name: Deploy with Helm
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config
          chmod 600 ~/.kube/config

      - name: Set up Helm
        uses: azure/setup-helm@v3

      - name: Helm Dependencies
        run: helm dependency update ./helm

      - name: Helm Upgrade + Install (atomic)
        run: |
          helm upgrade --install $HELM_RELEASE ./helm \
            --namespace $HELM_NAMESPACE \
            --create-namespace \
            --atomic \
            --timeout $HELM_TIMEOUT \
            --set image.repository=${{ env.IMAGE_NAME }} \
            --set image.tag=latest

  uninstall:
    name: Cleanup Helm Release (manual)
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'

    steps:
      - name: Set up Kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config
          chmod 600 ~/.kube/config

      - name: Set up Helm
        uses: azure/setup-helm@v3

      - name: Uninstall Helm Release
        run: helm uninstall $HELM_RELEASE --namespace $HELM_NAMESPACE || true
